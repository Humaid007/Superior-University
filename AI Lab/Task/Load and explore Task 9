import pandas as pd
import os

def load_dataset(file_path):
    """
    Load a dataset from a CSV or JSON file.
    Handles errors like invalid path, unsupported format, etc.
    """
    if not os.path.exists(file_path):
        print(f"Error: File not found at {file_path}")
        return None

    try:
        if file_path.endswith(".csv"):
            data = pd.read_csv(file_path)
        elif file_path.endswith(".json"):
            data = pd.read_json(file_path)
        else:
            print("Error: Unsupported file format. Please provide a CSV or JSON file.")
            return None
        print("\nDataset Loaded Successfully!")
        return data
    except Exception as e:
        print(f"Error while loading the file: {e}")
        return None

def explore_dataset(data):
    """
    Perform data exploration:
    - Show data types
    - Check for missing values
    - Display descriptive statistics
    - Display correlation matrix (numeric columns)
    """
    print("\n--- Data Exploration ---")
    
    print("\nData Types:")
    print(data.dtypes)
    
    print("\nShape of the Dataset (Rows, Columns):", data.shape)
    
    print("\nMissing Values per Column:")
    print(data.isnull().sum())
    
    print("\nSummary Statistics (Numeric Columns):")
    print(data.describe())

    print("\n--- Correlation Matrix (Numeric Columns Only) ---")
    numeric_data = data.select_dtypes(include=["number"])
    if numeric_data.empty:
        print("No numeric columns available for correlation.")
    else:
        print(numeric_data.corr())

def main():
    """
    Main function for loading and exploring a dataset.
    """
    file_path = input("Enter the full file path for your dataset (CSV/JSON): ").strip()
    
    data = load_dataset(file_path)
    if data is None:
        return
    
    print("\nFirst 5 Rows of the Dataset:")
    print(data.head())

    explore_dataset(data)

if __name__ == "__main__":
    main()
